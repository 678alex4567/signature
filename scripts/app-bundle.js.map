{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts"],"names":[],"mappings":";;;IAAA;QAAA;YAEE,SAAI,GAAG,EAAE,CAAC;YACV,aAAQ,GAAG,EAAE,CAAC;YACd,QAAG,GAAG,8BAA8B,CAAC;YACrC,WAAM,GAAG,EAAE,CAAC;YACZ,cAAS,GAAG,EAAE,CAAC;YACf,YAAO,GAAG,EAAE,CAAC;YACb,cAAS,GAAG,EAAE,CAAC;YACf,aAAQ,GAAG,EAAE,CAAC;YACd,eAAU,GAAG,EAAE,CAAC;QA6BlB,CAAC;QA5BC,sBAAI,yBAAQ;iBAAZ;gBACE,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,2BAA2B,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YAC5E,CAAC;;;WAAA;QACD,sBAAI,uBAAM;iBAAV;gBACE,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClE,CAAC;;;WAAA;QACD,sBAAI,yBAAQ;iBAAZ;gBACE,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,8BAA8B,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YAC/E,CAAC;;;WAAA;QACD,sBAAI,wBAAO;iBAAX;gBACE,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,sBAAsB,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACrE,CAAC;;;WAAA;QACD,sBAAI,0BAAS;iBAAb;gBACE,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,4BAA4B,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YAC/E,CAAC;;;WAAA;QACD,sBAAI,sBAAK;iBAAT;gBACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,EAAE,YAAY,CAAC,CAAC;YACpE,CAAC;;;WAAA;QACD,6BAAe,GAAf;YACE,MAAM,CAAC,YAAY,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC;gBACH,IAAI,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC9C,IAAI,GAAG,GAAG,UAAU,GAAG,YAAY,GAAG,cAAc,CAAC;gBACrD,KAAK,CAAC,2BAA2B,GAAG,GAAG,CAAC,CAAC;YAC3C,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACb,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAChC,CAAC;QACH,CAAC;QACH,UAAC;IAAD,CAvCA,AAuCC,IAAA;IAvCY,kBAAG;;;;;;;;ICAhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;ICAF,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;;;;ICfD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC","file":"app-bundle.js","sourcesContent":["export class App {\n  signature;\n  name = '';\n  position = '';\n  img = 'http://imgur.com/N0JqEb7.png';\n  _phone = '';\n  _facebook = '';\n  _github = '';\n  _linkedin = '';\n  _twitter = '';\n  _instagram = '';\n  get facebook() {\n    return this._facebook ? 'https://www.facebook.com/' + this._facebook : '';\n  }\n  get github() {\n    return this._github ? 'https://github.com/' + this._github : '';\n  }\n  get linkedin() {\n    return this._linkedin ? 'https://www.linkedin.com/in/' + this._linkedin : '';\n  }\n  get twitter() {\n    return this._twitter ? 'https://twitter.com/' + this._twitter : '';\n  }\n  get instagram() {\n    return this._instagram ? 'https://www.instagram.com/' + this._instagram : '';\n  }\n  get phone() {\n    return this._phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3');\n  }\n  copyToClipboard() {\n    window.getSelection().selectAllChildren(this.signature);\n    try {\n      var successful = document.execCommand('copy');\n      var msg = successful ? 'successful' : 'unsuccessful';\n      alert('Copying text command was ' + msg);\n    } catch (err) {\n      alert('Oops, unable to copy');\n    }\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}